/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ConvertidordeBits;

import java.awt.event.ActionListener;
import javax.swing.JRadioButton;

/**
 *
 * @author megan
 */
public class ConvertidorBits extends javax.swing.JFrame 
{
    private String [] Unidades = {"Bits", "Bytes", "KiloBytes", "MegaBytes", "GigaBytes", "TeraBytes"};
    public ConvertidorBits() 
    {
        initComponents();
        configurarEventos ();
    }

    
    private void configurarEventos() 
    {
        BitUB.putClientProperty("valor", 1);
        BytesUB.putClientProperty("valor", 2);
        KBytesUB.putClientProperty("valor", 3);
        MBytesUB.putClientProperty("valor", 4);
        GBytesUB.putClientProperty("valor", 5);
        TBytesUB.putClientProperty("valor", 6);
        BitsUC.putClientProperty("valor", 1);
        BytesUC.putClientProperty("valor", 2);
        KBytesUC.putClientProperty("valor", 3);
        MBytesUC.putClientProperty("valor", 4);
        GBytesUC.putClientProperty("valor", 5);
        TBytesUC.putClientProperty("valor", 6);
        ActionListener listenerBase = e -> actualizarDisponibilidad((JRadioButton) e.getSource(), true);
        ActionListener listenerConv = e -> actualizarDisponibilidad((JRadioButton) e.getSource(), false);
        BitUB.addActionListener(listenerBase);
        BytesUB.addActionListener(listenerBase);
        KBytesUB.addActionListener(listenerBase);
        MBytesUB.addActionListener(listenerBase);
        GBytesUB.addActionListener(listenerBase);
        TBytesUB.addActionListener(listenerBase);
        BitsUC.addActionListener(listenerConv);
        BytesUC.addActionListener(listenerConv);
        KBytesUC.addActionListener(listenerConv);
        MBytesUC.addActionListener(listenerConv);
        GBytesUC.addActionListener(listenerConv);
        TBytesUC.addActionListener(listenerConv);
    }

    private void actualizarDisponibilidad(JRadioButton seleccionado, boolean esBase) 
    {
        int valor = (int) seleccionado.getClientProperty("valor");
        if (esBase) 
        {
            habilitarConversion(valor);
        } 
        else 
        {
            habilitarBase(valor);
        }
    }
    
    private void habilitarConversion(int valorSeleccionado) 
    {
        JRadioButton[] botones = {BitsUC, BytesUC, KBytesUC, MBytesUC, GBytesUC, TBytesUC};
        for (JRadioButton rb : botones) 
        {
            int valor = (int) rb.getClientProperty("valor");
            rb.setEnabled(valor != valorSeleccionado);
        }
    }

    private void habilitarBase(int valorSeleccionado) 
    {
        JRadioButton[] botones = {BitUB, BytesUB, KBytesUB, MBytesUB, GBytesUB, TBytesUB};
        for (JRadioButton rb : botones) 
        {
            int valor = (int) rb.getClientProperty("valor");
            rb.setEnabled(valor != valorSeleccionado);
        }
    }
    
    private int getUnidadBaseSeleccionada() 
    {
        JRadioButton[] botonesBase = {BitUB, BytesUB, KBytesUB, MBytesUB, GBytesUB, TBytesUB};
        for (JRadioButton rb : botonesBase) 
        {
            if (rb.isSelected()) 
            {
                return (int) rb.getClientProperty("valor");
            }
        }
        return -1; 
    }
    
    private int getUnidadConvertirSeleccionada() 
    {
        JRadioButton[] botonesConv = {BitsUC, BytesUC, KBytesUC, MBytesUC, GBytesUC, TBytesUC};
        for (JRadioButton rb : botonesConv) 
        {
            if (rb.isSelected()) 
            {
                return (int) rb.getClientProperty("valor");
            }
        }
        return -1; 
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UnidadBase = new javax.swing.ButtonGroup();
        UnidadConversion = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BytesUB = new javax.swing.JRadioButton();
        KBytesUB = new javax.swing.JRadioButton();
        MBytesUB = new javax.swing.JRadioButton();
        GBytesUB = new javax.swing.JRadioButton();
        TBytesUB = new javax.swing.JRadioButton();
        TBytesUC = new javax.swing.JRadioButton();
        GBytesUC = new javax.swing.JRadioButton();
        MBytesUC = new javax.swing.JRadioButton();
        KBytesUC = new javax.swing.JRadioButton();
        BytesUC = new javax.swing.JRadioButton();
        BitsUC = new javax.swing.JRadioButton();
        BitUB = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtResultado = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(242, 235, 249));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Convertidor de Bits", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Symbol", 3, 18))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 12, 126));
        jLabel1.setText("Unidad Base");

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 12, 126));
        jLabel2.setText("Unidad a Convertir");

        UnidadBase.add(BytesUB);
        BytesUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        BytesUB.setText("Bytes");

        UnidadBase.add(KBytesUB);
        KBytesUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        KBytesUB.setText("KiloBytes");

        UnidadBase.add(MBytesUB);
        MBytesUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        MBytesUB.setText("MegaBytes");

        UnidadBase.add(GBytesUB);
        GBytesUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        GBytesUB.setText("GigaBytes");

        UnidadBase.add(TBytesUB);
        TBytesUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        TBytesUB.setText("TeraBytes");

        UnidadConversion.add(TBytesUC);
        TBytesUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        TBytesUC.setText("TeraBytes");

        UnidadConversion.add(GBytesUC);
        GBytesUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        GBytesUC.setText("GigaBytes");

        UnidadConversion.add(MBytesUC);
        MBytesUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        MBytesUC.setText("Megabytes");

        UnidadConversion.add(KBytesUC);
        KBytesUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        KBytesUC.setText("KiloBytes");

        UnidadConversion.add(BytesUC);
        BytesUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        BytesUC.setText("Bytes");

        UnidadConversion.add(BitsUC);
        BitsUC.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        BitsUC.setText("Bits");

        UnidadBase.add(BitUB);
        BitUB.setFont(new java.awt.Font("Simplified Arabic Fixed", 0, 14)); // NOI18N
        BitUB.setText("Bits");

        jLabel3.setFont(new java.awt.Font("Noto Sans Medium", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Cantidad a Convertir");

        txtValor.setFont(new java.awt.Font("Yu Gothic Light", 2, 14)); // NOI18N
        txtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Noto Sans Medium", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Resultado ");

        txtResultado.setFont(new java.awt.Font("Yu Gothic Light", 2, 14)); // NOI18N
        txtResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResultadoActionPerformed(evt);
            }
        });

        btnCalcular.setBackground(new java.awt.Color(255, 241, 232));
        btnCalcular.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnCalcular.setText("Calcular");
        btnCalcular.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnBorrar.setBackground(new java.awt.Color(255, 241, 232));
        btnBorrar.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        btnBorrar.setText("Borrar");
        btnBorrar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TBytesUB)
                                    .addComponent(GBytesUB)
                                    .addComponent(MBytesUB)
                                    .addComponent(KBytesUB)
                                    .addComponent(BytesUB)
                                    .addComponent(BitUB))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TBytesUC)
                                    .addComponent(GBytesUC)
                                    .addComponent(MBytesUC)
                                    .addComponent(KBytesUC)
                                    .addComponent(BytesUC)
                                    .addComponent(BitsUC))
                                .addGap(28, 28, 28))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtResultado, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE))))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(BytesUB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KBytesUB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MBytesUB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GBytesUB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TBytesUB))
                    .addComponent(BitUB)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BitsUC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BytesUC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(KBytesUC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MBytesUC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(GBytesUC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TBytesUC)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(26, 26, 26)
                .addComponent(txtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalcular)
                    .addComponent(btnBorrar))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResultadoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtResultadoActionPerformed

    private void txtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtValorActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
        ConvertidorBytes CB = new ConvertidorBytes ();
        double bytes = CB.convertirABytes(getUnidadBaseSeleccionada(), Double.parseDouble(txtValor.getText()));
        double resultado = CB.convertirDesdeBytes(getUnidadConvertirSeleccionada (), bytes);
        txtResultado.setText(txtValor.getText() + " " + Unidades[getUnidadBaseSeleccionada() - 1] + " equivalen a " + resultado + " " + Unidades[getUnidadConvertirSeleccionada() - 1]);
    
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        txtResultado.setText("");
        txtValor.setText("");
        UnidadBase.clearSelection();
        UnidadConversion.clearSelection();
        JRadioButton[] botonesBase = {BitUB, BytesUB, KBytesUB, MBytesUB, GBytesUB, TBytesUB};
        JRadioButton[] botonesConv = {BitsUC, BytesUC, KBytesUC, MBytesUC, GBytesUC, TBytesUC};
        for (JRadioButton rb : botonesBase) 
        {
            rb.setEnabled(true);
        }
        for (JRadioButton rb : botonesConv) 
        {
            rb.setEnabled(true);
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConvertidorBits.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConvertidorBits.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConvertidorBits.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConvertidorBits.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConvertidorBits().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BitUB;
    private javax.swing.JRadioButton BitsUC;
    private javax.swing.JRadioButton BytesUB;
    private javax.swing.JRadioButton BytesUC;
    private javax.swing.JRadioButton GBytesUB;
    private javax.swing.JRadioButton GBytesUC;
    private javax.swing.JRadioButton KBytesUB;
    private javax.swing.JRadioButton KBytesUC;
    private javax.swing.JRadioButton MBytesUB;
    private javax.swing.JRadioButton MBytesUC;
    private javax.swing.JRadioButton TBytesUB;
    private javax.swing.JRadioButton TBytesUC;
    private javax.swing.ButtonGroup UnidadBase;
    private javax.swing.ButtonGroup UnidadConversion;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCalcular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtResultado;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
